
Usuários : Aluno e Admin

// função que verifica se o usuário tem um token válido
    const verifyToken = async (token, refresh) => {

        // precisa-se do token e o refresh
        const data = {
            tokenAccess : token,
            refreshToken : refresh
        }

        try {
            const response = await api.post("/api/token/verify/", data.tokenAccess)
            if (!response.ok) {
                throw new Error("Erro ao verificar o token: " + response.status);
            }
            // se der certo, não ocorre nada e o user permanece no logado no app
            console.log("O token foi aceito")
            return ""
            
        } catch (error) {
            // Lidar com erros
            console.error("Ocorreu um erro ao verificar o token: ", error.message);

            if (error.message.includes('401')) {
                // Consumir o endpoint do refresh token
                ConsumirRefreshToken(data.refreshToken);
            } else {
                logout()
                router.push('/')
            }
        }
}


// verificando id do usuário
async function VerifyUserPermission(token_decodificado) {
    const id_user_tela = token_decodificado.user_id

    if (id_user_tela) {
        // significa que o tipo do usuário não permite ele acessar essa tela
        const resp = await verificarTipoUsuario(token_decodificado.user_id);
        console.log("O tipo do usuário: ", resp.nome_tipo);

        if (resp.nome_tipo !== "admin" & resp.nome_tipo !== "aluno") {
            window.location.href = "../index.html";
            
        } else {
            console.log("Usuário certo")
        }
    }

    console.log("Usuário da tela: ", id_user_tela)
}
VerifyUserPermission(token_decodificado)



// retorna varias infos do user, inclusive o tipo
async function verificarTipoUsuario(id) {
    const url = url_base + `api/gerusuarios/v1/users/${id}`;

    const options = {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            'Authorization' : `Bearer ${localStorage.getItem('token')}`
        }
    }

    try {
        const response = await fetch(url, options);
        if (!response.ok) {
            throw new Error("Erro ao puxar os usuários" + response.status);
        }
        const data = await response.json();
        console.log("Aqui está o usuário: ", data);
        return data;

    } catch (error) {
        console.error("Erro durante a requisição dos usuários: ", error.message);
    }
}
